<?php $root = $_SERVER['DOCUMENT_ROOT']; ?>
<?php require_once $root . '/template/shared/header.php'; ?>

<h2>Поиск позиции заданного числа</h2>
<p>Осуществляется поиск числа, и если оно присутствует в массиве - выводим его позицию</p>

<hr>
<?php 

function binarySearch($needle, $array) {
  $low = 0; // Исходная минимально возможная позиция
  $high = count($array) - 1; // Исходная максимально возможная позиция

  while ($low <= $high) { // Условие работы цикла: пока $low <= $high
    $middle = floor(($low + $high) / 2); // Ориентировочная средняя позиция (округлено в +)

    // Если значение элемента массива, находящегося на средней позиции, соответствует цели - 
    // - возвращаем значение средней позиции 
    if ($array[$middle] == $needle) {
      return $middle; // Результат работы функции, если цель присутствует в массиве
    }

    // Если значение элемента массива, находящегося на средней позиции, больше цели 
    if ($array[$middle] > $needle) {
    // обновляем переменную $high
      $high = $middle - 1;
    } else {
    // Если значение элемента массива, находящегося на средней позиции, меньше цели  
    // обновляем переменную $low
      $low = $middle + 1;
    }

  }
  // Если цикл ничего не находит 
  // return null;

  return 'Result search - null!'; // Результат работы функции, если цель отсутствует в массиве
}

$array = [1, 3, 5, 7, 9];
echo binarySearch(3, $array) . "<br>";
echo binarySearch(-1, $array) . "<br>";

?>
<br>
<h2>Упражнения</h2>

<p>1. Имеется отсортированный список из 128 имен, и вы ищете в нем значение методом бинарного поиска. Какое максимальное количество проверок для этого может потребоваться?</p><br>

<h3>Решение</h3>

<?php 
$log = log(128, 2);
echo $log;
?>
<hr>
<p>2. Если размер списка увеличился вдвое, как изменится максимальное количество проверок?</p><br>

<h3>Решение</h3>

<?php 
$log = log((128*2), 2);
echo $log;
?>

<p>Ответ: + 1</p>


<?php require_once $root . '/template/shared/footer.php'; ?>